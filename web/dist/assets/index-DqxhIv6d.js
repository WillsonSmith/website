var h=Object.defineProperty;var p=(s,e,r)=>e in s?h(s,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[e]=r;var c=(s,e,r)=>p(s,typeof e!="symbol"?e+"":e,r);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function r(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;const i=r(t);fetch(t.href,i)}})();customElements.get("raising-block")||customElements.define("raising-block",class extends HTMLElement{constructor(){super();c(this,"_handleIntersection",e=>{for(const r of e)this.classList.toggle("visible",r.isIntersecting)});this.intersectionObserver=new IntersectionObserver(this._handleIntersection,{threshold:[.5]}),this.intersectionObserver.observe(this)}});customElements.get("h-image-swap")||customElements.define("h-image-swap",class extends HTMLElement{constructor(){super();c(this,"images",[]);c(this,"handleIntersections",e=>{for(const r of e)r.isIntersecting?this.setAttribute("data-visible",1):this.setAttribute("data-visible",2)});this.intersectionObserver=new IntersectionObserver(this.handleIntersections,{rootMargin:"-180px 0px 0px 0px",threshold:[.25]}),this.intersectionObserver.observe(this)}});const m=document.querySelector("#wave-clip path");let a=0;const u=50;let o=1;const d=[{amplitude:.01,frequency:2,phase:0,bobSpeed:.005},{amplitude:.006,frequency:2,phase:Math.PI/2,bobSpeed:.007},{amplitude:.008,frequency:2,phase:Math.PI,bobSpeed:.004}];function f(){let s="M0,0.5";o>1&&(o-=.01);for(let e=0;e<=u;e++){const r=e/u;let n=.5;for(const t of d)n+=t.amplitude*o*Math.sin((t.frequency*r+t.phase+a)*Math.PI*2);s+=` L${r},${n}`}s+=" V1 H0 Z",m.setAttribute("d",s);for(const e of d)e.phase+=e.bobSpeed;a+=1e-4,requestAnimationFrame(f)}globalThis.addEventListener("scroll",()=>{const s=Math.min(.1,globalThis.scrollY*2e-4);o<3&&(o+=s)});f();
